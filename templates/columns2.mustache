{{!
    This file is part of Moodle - http://moodle.org/

    Moodle is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    Moodle is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with Moodle.  If not, see <http://www.gnu.org/licenses/>.
}}
{{!
    @template theme_boost_campus/columns2

    Admin time setting template.

    Boost Campus 2 column layout template.

    Context variables required for this template:
    * sitename - The name of the site
    * output - The core renderer for the page
    * bodyattributes - attributes for the body tag as a string of html attributes
    * sidepreblocks - HTML for the blocks
    * hasblocks - true if there are blocks on this page
    * navdraweropen - true if the nav drawer should be open on page load
    * regionmainsettingsmenu - HTML for the region main settings menu
    * hasregionmainsettingsmenu - There is a region main settings menu on this page.

    Example context (json):
    {
        "sitename": "Moodle",
        "output": {
            "doctype": "<!DOCTYPE html>",
            "page_title": "Test page",
            "favicon": "favicon.ico",
            "main_content": "<h1>Headings make html validators happier</h1>"
         },
        "bodyattributes":"",
        "sidepreblocks": "<h2>Blocks html goes here</h2>",
        "hasblocks":true,
        "navdraweropen":true,
        "regionmainsettingsmenu": "",
        "hasregionmainsettingsmenu": false,
        "nawdrawerfullwidth": yes
    }
}}
{{! MODIFICATION:
    * Remove section for footer blocks with own mustache template
    * Add theme_boost_campus/nav-drawer template instead of theme_boost/nav-drawer template
    * Require own javascript module for back to top button functionality
    * If setting "showsettingsincourse" is enabled, then render course context menu from theme_boost_campus/settings_link_page template
      and use the equivalent own javascript "incoursesettings".
    * Use additional JavaScript functionality if the setting nawdrawerfullwidth is enabled. We write this here, so we do not
      have to override the drawer.js file for this small addition.
}}
{{{ output.doctype }}}
<html {{{ output.htmlattributes }}}>
<head>
    <title>{{{ output.page_title }}}</title>
    <link rel="shortcut icon" href="{{{ output.favicon }}}" />
    {{{ output.standard_head_html }}}
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
</head>

<body {{{ bodyattributes }}}>

<div id="page-wrapper">

    {{{ output.standard_top_of_body_html }}}

    {{>theme_boost/header}}

    <div id="page" class="container-fluid">
        {{{ output.full_header }}}

        <div id="page-content" class="row">
            <div id="region-main-box" class="col-xs-12">
                {{#node}}
                    {{> theme_boost_campus/settings_link_page }}
                {{/node}}
                {{#hasregionmainsettingsmenu}}
                <div id="region-main-settings-menu" class="hidden-print {{#hasblocks}}has-blocks{{/hasblocks}}">
                    <div> {{{ output.region_main_settings_menu }}} </div>
                </div>
                {{/hasregionmainsettingsmenu}}
                <section id="region-main" {{#hasblocks}}class="has-blocks"{{/hasblocks}}>
                    <div class="card card-block">
                    {{#hasregionmainsettingsmenu}}
                        <div class="region_main_settings_menu_proxy"></div>
                    {{/hasregionmainsettingsmenu}}
                    {{{ output.course_content_header }}}
                    {{{ output.main_content }}}
                    {{{ output.course_content_footer }}}
                    </div>
                </section>
                {{#hasblocks}}
                <section data-region="blocks-column" class="hidden-print">
                    {{{ sidepreblocks }}}
                </section>
                {{/hasblocks}}
            </div>
        </div>
    </div>
    {{> theme_boost_campus/nav-drawer }}
</div>

</body>
</html>
{{#js}}
require(['theme_boost/loader']);
require(['theme_boost/drawer'], function(mod) {
    mod.init();
});
require(['theme_boost_campus/backtotop'], function(mod) {
    mod.init();
});
require(['theme_boost_campus/catchshortcuts'], function(mod) {
    mod.init({{{catchshortcuts}}});
});
{{#node}}
    require(['theme_boost_campus/incoursesettings'], function(mod) {
    mod.init();
    });
{{/node}}
{{#nawdrawerfullwidth}}
    require(['jquery'], function($) {
        // Add special event listener to force the nav drawer to close in full width mode
        // if a nav drawer menu item is clicked. On the one hand section links are only anchors on the same page and so there is
        // no page refresh that would load the new page and close the menu. If it does not close, the user does not know
        // that something changed in the background because he cannot see it. So we force the closing. On the other hand the
        // closing action would take a long time period until the new course or other page is loaded. So we also force the menu
        // o be closed.

        var trigger = $('button[data-action=toggle-drawer]');
        var drawer = $(document.getElementById('nav-drawer'));

        // Only check if user is using a small screen
        if ($(document).width() < 768) {
            // If user clicks on a list-group-item.
            $('#nav-drawer .list-group-item').click(function() {
                // Nav drawer is currently expanded.
                if($('body').hasClass('drawer-open-left')) {
                    // All required actions on DOM elements to close the nav drawer.
                    $('body').removeClass('drawer-open-left');
                    trigger.attr('aria-expanded', 'false');
                    drawer.attr('aria-hidden', 'true').addClass('closed');
                    // Set nav drawer open preference status to closed.
                    M.util.set_user_preference('drawer-open-nav', false);
                }
            });
            // If user clicks on the hamburger menu button to expand the menu again.
            $('header button[data-action=toggle-drawer]').click(function() {
                console.log("Button gedrÃ¼ckt!");
                //  and the nav drawer is closed.
                 if (!($('body').hasClass('drawer-open-left'))) {
                    // All required actions on DOM elements to close the nav drawer.
                    $('body').addClass('drawer-open-left');
                    trigger.attr('aria-expanded', 'true');
                    drawer.attr('aria-hidden', 'false').removeClass('closed');
                    // Set nav drawer open preference status to opened.
                    M.util.set_user_preference('drawer-open-nav', true);
                } else if (($('body').hasClass('drawer-open-left'))) {
                    // Button is clicked and menu is expanded => menu needs to be closed again.
                    // All required actions on DOM elements to close the nav drawer.
                    $('body').removeClass('drawer-open-left');
                    trigger.attr('aria-expanded', 'false');
                    drawer.attr('aria-hidden', 'true').addClass('closed');
                    // Set nav drawer open preference status to closed.
                    M.util.set_user_preference('drawer-open-nav', false);
                }
            });
        } else {
            require(['theme_boost/drawer'], function(mod) {
                mod.init();
            });
        }
    });
{{/nawdrawerfullwidth}}
{{/js}}
